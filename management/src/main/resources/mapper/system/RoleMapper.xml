<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.system.mapper.RoleMapper">
    <resultMap id="roleEntity" type="com.example.demo.system.entity.Role">
        <id column="id" property="id" />
        <result column="role_name" property="roleName" />
        <result column="description" property="description" />
        <result column="gmt_create" property="gmtCreate" />
    </resultMap>

    <resultMap id="roleDto" type="com.example.demo.system.dto.RoleDto">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="role_name" jdbcType="VARCHAR" property="roleName" />
        <result column="description" jdbcType="VARCHAR" property="description" />
        <collection property="permissionIdList" ofType="java.lang.Long" >
            <result column="permission_id"></result>
        </collection>
    </resultMap>

    <select id="getList" resultMap="roleEntity">
        select id, role_name, description, gmt_create from sys_role
        <where>
            <if test="params.roleName != null and params.roleName != ''">
                and role_name like concat('%', #{params.roleName}, '%')
            </if>
        </where>
    </select>

    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        insert into sys_role (role_name, description, gmt_create)
        values (#{roleName}, #{description}, #{gmtCreate})
    </insert>

    <update id="update">
        update sys_role
        <trim prefix="set" suffixOverrides=",">
            <if test="roleName != null and roleName != ''">
                role_name = #{roleName},
            </if>
            <if test="description != null and description != ''">
                description = #{description},
            </if>
        </trim>
        where id = #{id}
    </update>

    <select id="detail" resultMap="roleDto">
        select role.id, role.role_name, role.description, srp.permission_id permission_id
        from sys_role role
        left join sys_role_permission srp on srp.role_id = role.id
        where role.id = #{id}
    </select>

    <delete id="remove">
        delete from sys_role where id in (${ids})
    </delete>
</mapper>
